// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
	repositories {
		jcenter()
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:2.3.1'
		// NOTE: Do not place your application dependencies here; they belong
		// in the individual module build.gradle files

		classpath 'org.ajoberstar:grgit:1.1.0'

		// https://github.com/Triple-T/gradle-play-publisher#usage
		classpath 'com.github.triplet.gradle:play-publisher:1.2.0'
	}
}

plugins {
	// obtain revision from git
	id 'org.ajoberstar.grgit' version '1.6.0'
}

allprojects {
	repositories {
		jcenter()
	}
}

/////////////// yaxim specific build rules ///////////////
apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

// gradle rule to download sources for AS (because AS can't on its own)
// run as: `gradle cleanIdea idea`
apply plugin: 'idea'
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

ext {
	build_date = "${new Date().format('yyyy-MM-dd')}"
	build_revision = "${grgit.describe()}"
	build_version = "yaxim ${build_revision} ${build_date}"
}

task buildVersion (type: Copy) {
	from("template") {
		include "version.xml"
		expand( build_date: build_date,
			build_revision: build_revision,
			build_version: build_version)
	}
	into("res/values")
	outputs.upToDateWhen {
		false
	}
}

play {
	track = 'beta'
}

android {
	compileSdkVersion 25
	buildToolsVersion "25.0.0"
	playAccountConfigs {
		defaultAccountConfig {
			jsonFile = file('play-publish-credentials.json')
		}
	}
	defaultConfig {
		minSdkVersion 9
		targetSdkVersion 23
		versionName "$build_revision"
		playAccountConfig = playAccountConfigs.defaultAccountConfig
	}

	signingConfigs {
		release {
			storeFile file(RELEASE_STORE_FILE)
			storePassword RELEASE_STORE_PASSWORD
			keyAlias RELEASE_KEY_ALIAS
			keyPassword RELEASE_KEY_PASSWORD
		}
	}

	buildTypes {
		debug {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
		}
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
			signingConfig signingConfigs.release
		}
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']
			resources.srcDirs = ['src']
			aidl.srcDirs = ['src']
			renderscript.srcDirs = ['src']
			res.srcDirs = ['res']
			assets.srcDirs = ['assets']
		}
	}
	lintOptions {
		disable 'MissingTranslation'
	}
}

dependencies {
	compile 'com.android.support:appcompat-v7:25.+'
	// implicit compile 'com.android.support:support-v4:25.+'
	compile project('MemorizingTrustManager')
	compile fileTree(include: ['*.jar'], dir: 'libs')
	compile "me.leolin:ShortcutBadger:1.1.21@aar"
	compile 'org.hsluv:hsluv:0.2'
	compile 'com.koushikdutta.urlimageviewhelper:urlimageviewhelper:1.0.4'
	compile 'com.google.zxing:core:3.2.1'
    // smack4
	//compile project("Smack:smack-android-extensions")
	//compile project("Smack:smack-tcp")
	//compile project("Smack:smack-im")
	//// for Carbons, and other
	//compile project("Smack:smack-experimental")
	compile "org.jxmpp:jxmpp-jid:0.6.4-SNAPSHOT"
	compile "org.igniterealtime.smack:smack-android-extensions:4.3.3-SNAPSHOT"
	compile "org.igniterealtime.smack:smack-tcp:4.3.3-SNAPSHOT"
	compile "org.igniterealtime.smack:smack-im:4.3.3-SNAPSHOT"
	// for Carbons, and other
	compile "org.igniterealtime.smack:smack-experimental:4.3.3-SNAPSHOT"

}

// for smack4
configurations {
	all*.exclude group: 'xpp3', module: 'xpp3'
}

preBuild.dependsOn buildVersion
